{"version":3,"sources":["components/Accordion.js","components/Card.js","components/Data.js","App.js","index.js"],"names":["Accordion","data","toggleAccordion","id","activeIndex","question","answer","isCurrentElement","showAnswer","className","addReverseClass","addBold","accordionUnderline","onClick","src","alt","Card","useState","activeAccordionIndex","setActiveAccordionIndex","toggleAccordionHandle","currentElement","accordions","map","el","i","Data","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA+BeA,EA7BG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAGtCC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OACZC,EAAmBJ,IAAOC,EAC1BI,EAAaD,EAAmB,mBAAGE,UAAS,2BAAsBF,EAAmB,OAAS,IAA9D,SAAqED,IAAc,GACnHI,EAAkBH,EAAmB,OAAS,GAC9CI,EAAUJ,EAAmB,OAAS,GACtCK,EAAqBL,EAAmB,iBAAmB,GAEjE,OACE,sBAAKE,UAAU,kBAAf,UACE,sBACEA,UAAU,2BACVI,QAAS,kBAAMX,EAAgBC,IAFjC,UAIE,mBAAGM,UAAS,6BAAwBE,GAApC,SAAgDN,IAChD,qBACES,IAAI,8BACJC,IAAI,QACJN,UAAS,gBAAWC,QAGvBF,EACD,qBAAKC,UAAS,8BAAyBG,SCmC9BI,G,MAvDF,SAAC,GAAc,IAAZf,EAAW,EAAXA,KAAW,EAC+BgB,oBAAU,GADzC,mBAClBC,EADkB,KACIC,EADJ,KAEnBC,EAAwB,SAACC,GAM7BF,EAJIE,IAAmBH,EAICG,GAHG,IAOvBC,EAAarB,EAAKsB,KAAI,SAACC,EAAIC,GAAL,OAC1B,cAAC,EAAD,CAEExB,KAAMuB,EACNtB,gBAAiBkB,EACjBjB,GAAIsB,EACJrB,YAAac,GAJRO,MAQT,OACE,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,cACVK,IAAI,iDACJC,IAAI,UAEN,qBACEN,UAAU,yBACVK,IAAI,kCACJC,IAAI,oBAIV,qBACEN,UAAU,YACVK,IAAI,sCACJC,IAAI,QAGN,sBAAKN,UAAU,gBAAf,UACE,mBAAGA,UAAU,aAAb,iBACA,qBAAKA,UAAU,kBAAf,SAEGa,YCtDEI,EAAO,CAAC,CACbrB,SAAU,sCACVC,OAAQ,mCACT,CACCD,SAAU,wCACVC,OAAQ,mCAEZ,CACID,SAAU,8BACVC,OAAQ,mCAEZ,CACID,SAAU,iCACVC,OAAQ,mCAEZ,CACID,SAAU,qCACVC,OAAQ,oCCLDqB,MARf,WACE,OACE,qBAAKlB,UAAU,gBAAf,SACE,cAAC,EAAD,CAAMR,KAAMyB,OCDlBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e36ffc3.chunk.js","sourcesContent":["import \"../styles/accordion.css\";\n\nconst Accordion = ({ data, toggleAccordion, id, activeIndex }) => {\n  //в аргументах деструктурируем объект props\n\n  const { question, answer } = data;\n  const isCurrentElement = id === activeIndex;\n  const showAnswer = isCurrentElement ? <p className={`accordion-answer ${isCurrentElement ? \"open\" : \"\"}`}>{answer}</p> : \"\";\n  const addReverseClass = isCurrentElement ? \"down\" : \"\"; //\"down\" это класс, который добавляется на элемент, на который кликнул пользователь\n  const addBold = isCurrentElement ? \"bold\" : \"\"; \n  const accordionUnderline = isCurrentElement ? \"underline-open\" : \"\"; \n\n  return (\n    <div className=\"accordion-block\">\n      <div\n        className=\"accordion-item-container\"\n        onClick={() => toggleAccordion(id)}\n      >\n        <p className={`accordion-question ${addBold}`}>{question}</p>\n        <img\n          src=\"/images/icon-arrow-down.svg\"\n          alt=\"arrow\"\n          className={`arrow ${addReverseClass}`}\n        />\n      </div>\n      {showAnswer}\n      <div className={`accordion-underline ${accordionUnderline}`}></div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import { useState } from \"react\";\nimport Accordion from \"./Accordion\"; //импортируем компонент аккордеона\nimport \"../styles/card.css\";\n\n//setActiveAccordionIndex - функция, которая обновляет state\n\nconst Card = ({ data }) => {\n  const [activeAccordionIndex, setActiveAccordionIndex] = useState(-1); //useState возвращает массив с двумя элементами [initalState, dispatchAction], первый элемент - это начальное значение нашего стейта, а второй - это функция, которая перезаписывает наш стейт(первый аргумент)(поскольку это массив, мы его деструктурируем)\n  const toggleAccordionHandle = (currentElement) => {\n    //   проверяю, если индекс элемента совпадает с индексом клика, то это означает, что мы кликнули на открытый элемент\n    if (currentElement === activeAccordionIndex) {\n      setActiveAccordionIndex(-1); //перезаписываем состояние, на несуществующий индекс, чтобы закрыть все аккордеоны\n      return; //выходим из функции\n    }\n    setActiveAccordionIndex(currentElement); //перезаписываем состояние, меняя индекс на элемент, на который мы кликнули\n  };\n\n  //перебираем массив объектов даты с файла Data.js и передаем данные пропсами(props) в компонент Accordion и на выходе получаем массив jsx объектов\n  const accordions = data.map((el, i) => (\n    <Accordion\n      key={i}\n      data={el}\n      toggleAccordion={toggleAccordionHandle}\n      id={i}\n      activeIndex={activeAccordionIndex}\n    />\n  ));\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-images\">\n        <div className=\"woman-image-block\">\n          <img\n            className=\"woman-image\"\n            src=\"./images/illustration-woman-online-desktop.svg\"\n            alt=\"woman\"\n          />\n          <img\n            className=\"background-woman-image\"\n            src=\"./images/bg-pattern-desktop.svg\"\n            alt=\"background\"\n          />\n        </div>\n      </div>\n      <img\n        className=\"box-image\"\n        src=\"images/illustration-box-desktop.svg\"\n        alt=\"box\"\n      />\n\n      <div className=\"faq-container\">\n        <p className=\"card-title\">FAQ</p>\n        <div className=\"accordions-list\">\n          {/* вставляем массив элементов списка акордеона*/}\n          {accordions}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","export const Data = [{\n        question: \"How many team members can I invite?\",\n        answer: \"You can intive up to 3 members.\"\n    }, {\n        question: \"What is the maximum file upload size?\",\n        answer: \"You can intive up to 3 members.\"\n    }, \n    {\n        question: \"How do I reset my password?\",\n        answer: \"You can intive up to 3 members.\"\n    },\n    {\n        question: \"Can I cancel my subscriptions?\",\n        answer: \"You can intive up to 3 members.\"\n    },\n    {\n        question: \"Do you provide additional support?\",\n        answer: \"You can intive up to 3 members.\"\n    }]\n\n","import \"./App.css\";\nimport Card from \"./components/Card\";\nimport { Data } from \"./components/Data\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Card data={Data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}